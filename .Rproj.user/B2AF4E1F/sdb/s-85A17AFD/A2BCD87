{
    "contents" : "###########################################\n# Descriptive statistics on variables\n###########################################\nlibrary(nortest)\nlibrary(ggplot2)\nlibrary(gridExtra)\n# PPVT\na1 <- ggplot(FACES2006_missing, aes(x=A1PPVT4W))\na1 <- a1 + geom_histogram()\na2 <- ggplot(FACES2006_missing, aes(x=A2PPVT4W))\na2 <- a2 + geom_histogram()\na3 <- ggplot(FACES2006_missing, aes(x=A3PPVT4W))\na3 <- a3 + geom_histogram()\na4 <- ggplot(FACES2006_missing, aes(x=A4PPVT4W))\na4 <- a4 + geom_histogram()\ngrid.arrange(a1, a2, a3, a4)\n# WJ Applied Problem\na1 <- ggplot(FACES2006_missing, aes(x=A1WJAPW))\na1 <- a1 + geom_histogram()\na2 <- ggplot(FACES2006_missing, aes(x=A2WJAPW))\na2 <- a2 + geom_histogram()\na3 <- ggplot(FACES2006_missing, aes(x=A3WJAPW))\na3 <- a3 + geom_histogram()\na4 <- ggplot(FACES2006_missing, aes(x=A4WJAPW))\na4 <- a4 + geom_histogram()\ngrid.arrange(a1, a2, a3, a4)\n# WJ Letter Word Idenitfication\na1 <- ggplot(FACES2006_missing, aes(x=A1WJLWW))\na1 <- a1 + geom_histogram()\na2 <- ggplot(FACES2006_missing, aes(x=A2WJLWW))\na2 <- a2 + geom_histogram()\na3 <- ggplot(FACES2006_missing, aes(x=A3WJLWW))\na3 <- a3 + geom_histogram()\na4 <- ggplot(FACES2006_missing, aes(x=A4WJLWW))\na4 <- a4 + geom_histogram()\ngrid.arrange(a1, a2, a3, a4)\n####################################################\n# Tables for assessment\n####################################################\nlibrary(psych)\nlibrary(xtable)\n# Select out assessment data\nassessments <- subset(FACES2006.subset, \n                      select = c(A1PPVT4W, A2PPVT4W, A3PPVT4W, A4PPVT4W, A1WJAPW, A2WJAPW, A3WJAPW, A4WJAPW, A1WJLWW, A2WJLWW, A3WJLWW, A4WJLWW))\nrow.names(assessments) <- NULL\nassessments.descriptive <- describe(assessments)\nprint(assessments.descriptive)\n#assessments.descriptive<-xtable(describe(assessments)) # For markdown\n#print(assessments.descriptive, type=\"html\", floating=FALSE)  # For markdown\n# Note. Kurtosis ok (slightly platykurtic-flat); Skewness ok (mostly left skewed)\n# Heat map for correlations\nlibrary(reshape2)\nz <- cor(assessments, method=\"pearson\", use=\"complete\")\nz.m <- melt(z)\nggplot(z.m, aes(Var1, Var2, fill = value)) + geom_tile() + \n  scale_fill_gradient2(low = \"blue\",  high = \"yellow\") + ggtitle(\"Heat Map for Assessment Correlations\")\n# Demographics for child\nage <- subset(FACES2006.subset,\n              select = c(A1CAGE, A2CAGE, A3CAGE, A4CAGE))\nage.descriptive <- describe(age)\nprint(age.descriptive)\ntable(FACES2006.subset$CHGENDER)\ntable(FACES2006.subset$CRACE)\ntable(FACES2006.subset$PKYEAR)\ntable(FACES2006.subset$S08_GRADE)\ntable(FACES2006.subset$KGYEAR)\ntable(FACES2006.subset$COHORT)\ntable(FACES2006.subset$P1HHLAN2)\n# Demogrpahic Data for Parent(s)\ntable(FACES2006.subset$P1RCAGE)\ntable(FACES2006.subset$MRACE) # Mother Race\ntable(FACES2006.subset$FRACE) # Father Race\ntable(FACES2006.subset$P1INCOME)  # Household Income\ntable(FACES2006.subset$P1MOMEMP)  # Mother's Employment Status\ntable(FACES2006.subset$P1POVRTO)  # Ratio of Income to Poverty\ntable(FACES2006.subset$P1POVRTY)  # Poverty Status\ntable(FACES2006.subset$P1NUMSIB)  # Number of siblings in house\ntable(FACES2006.subset$P1RHHLNG)  # Household Language\ntable(FACES2006.subset$P1RMARTL)  # Parent Marital Status\ntable(FACES2006.subset$P1RDADED)  # Father's Highest Level of Education\ntable(FACES2006.subset$P1RMOMED)  # Mother's Highest Level of Education\ntable(FACES2006.subset$P1ANYCCR)  # Care before HS\n####################################################\n# Correlation of predictors \n#################################################### \nplbs.t1 <- subset(FACES2006.subset, \n                  select = c(R1BAGGR, R1BHYPER, R1BWITH, R1BPROB, R1ATTUDE, R1MOTIVE, R1PRSIST, R1TPLBS, A1PPVT4W, A1WJAPW, A1WJLWW))\nplbs.t1.descriptive <- describe(plbs.t1)\nprint(plbs.t1.descriptive)\nhist(plbs.t1$R1BAGGR)\nhist(plbs.t1$R1BHYPER)\nhist(plbs.t1$R1BWITH)\nhist(plbs.t1$R1BPROB)\nplbs.t2 <- subset(FACES2006.subset, \n                  select = c(R2BAGGR, R2BHYPER, R2BWITH, R2BPROB, R2ATTUDE, R2MOTIVE, R2PRSIST, R2TPLBS, A2PPVT4W, A2WJAPW, A2WJLWW))\nplbs.t2.descriptive <- describe(plbs.t2)\nprint(plbs.t2.descriptive)\nhist(plbs.t2$R2BAGGR)\nhist(plbs.t2$R2BHYPER)\nhist(plbs.t2$R2BWITH)\nhist(plbs.t2$R2BPROB)\nplbs.t3 <- subset(FACES2006.subset, \n                  select = c(R3BAGGR, R3BHYPER, R3BWITH, R3BPROB, R3ATTUDE, R3MOTIVE, R3PRSIST, R3TPLBS, A3PPVT4W, A3WJAPW, A3WJLWW))\nplbs.t3.descriptive <- describe(plbs.t3)\nprint(plbs.t3.descriptive)\nplbs.t4 <- subset(FACES2006.subset, \n                  select = c(KR4BAGGR, KR4BHYPE, KR4BWITH, KR4BPROB, KR4ATUDE, KR4MOTIV, KR4PRSST, KR4TPLBS, A4PPVT4W, A4WJAPW, A4WJLWW))\nplbs.t4.descriptive <- describe(plbs.t4)\nprint(plbs.t4.descriptive)\n# Heat PLBS Time 1\nz.1 <- cor(plbs.t1, method=\"pearson\", use=\"complete\")\nz.m.1 <- melt(z.1)\nggplot(z.m.1, aes(Var1, Var2, fill = value)) + geom_tile() + \n  scale_fill_gradient2(low = \"purple\",  high = \"green\") + ggtitle(\"Heat Map for PLBS Time1 and Dependent Variables Correlations\")\n# Heat Map PLBS Time 2\nz.2 <- cor(plbs.t2, method=\"pearson\", use=\"complete\")\nz.m.2 <- melt(z.2)\nggplot(z.m.2, aes(Var1, Var2, fill = value)) + geom_tile() + \n  scale_fill_gradient2(low = \"purple\",  high = \"green\") + ggtitle(\"Heat Map for PLBS Time2 and Dependent Variables Correlations\")\n# Heat Map PLBS Time 3\nz.3 <- cor(plbs.t3, method=\"pearson\", use=\"complete\")\nz.m.3 <- melt(z.3)\nggplot(z.m.3, aes(Var1, Var2, fill = value)) + geom_tile() + \n  scale_fill_gradient2(low = \"purple\",  high = \"green\") + ggtitle(\"Heat Map for PLBS Time3 and Dependent Variables Correlations\")\n# Heat Map PLBS Time 4\nz.4 <- cor(plbs.t4, method=\"pearson\", use=\"complete\")\nz.m.4 <- melt(z.4)\nggplot(z.m.4, aes(Var1, Var2, fill = value)) + geom_tile() + \n  scale_fill_gradient2(low = \"purple\",  high = \"green\") + ggtitle(\"Heat Map for PLBS Time4 and Dependent Variables Correlations\")\n######################################\n# Testing for multivariate normality\n#####################################\n# library(energy)\n# all.assessments <- subset(FACES2006.subset,\n#   select = c(A1PPVT4W, A2PPVT4W, A3PPVT4W, A4PPVT4W, A1WJAPW, A2WJAPW, A3WJAPW, A4WJAPW, A1WJLWW, A2WJLWW, A3WJLWW, A4WJLWW,\n# R1ATTUDE, R1BAGGR, R1BHYPER, R1BPROB, R1BWITH, R1MOTIVE, R1PRSIST, R1SSRS, R1TPELS, R1TPLBS,\n# R2ATTUDE, R2BAGGR, R2BHYPER, R2BPROB, R2BWITH, R2MOTIVE, R2PRSIST, R2SSRS, R2TPELS, R2TPLBS, \n# R3ATTUDE, R3BAGGR, R3BHYPER, R3BPROB, R3BWITH, R3MOTIVE, R3PRSIST, R3SSRS, R3TPELS, R3TPLBS\n# ))\n# row.names(all.assessments) <- NULL  # Knocks out the row.names column in viewer \n# # Need to use MissMech because we have missing data.s\n# library(MissMech)\n# out <- TestMCARNormality(data = all.assessments, alpha = 0.1, imputation.number = 10, imputation.method = \"Dist.Free\")\n# summary(out)\n# mcar <- TestMCARNormality(all.assessments, del.lesscases = 6, imputation.number = 1, \n#   method = \"Auto\", imputation.method = \"Dist.Free\", nrep = 10000,\n#   n.min = 30, seed = 110, alpha = 0.05, imputed.data = NA)\n# summary(mcar)\n# # Note. Data is not multivariate normal or MCAR.\n# # Power analysis turn to Preacher QuantPsych\n# for(i in 1:ncol(all.assessments)){\n#   print(c(max(all.assessments[,i],na.rm=TRUE), min(all.assessments[,i], na.rm=TRUE)))\n# }\nall.assessments <- subset(FACES2006.subset,\n                          select = c(A1PPVT4W, A2PPVT4W, A3PPVT4W, A4PPVT4W, A1WJAPW, A2WJAPW, A3WJAPW, A4WJAPW, A1WJLWW, A2WJLWW, A3WJLWW, A4WJLWW,\n                                     R1ATTUDE, R1BAGGR, R1BHYPER, R1BPROB, R1BWITH, R1MOTIVE, R1PRSIST, R1BPROB, R1TPLBS,\n                                     R2ATTUDE, R2BAGGR, R2BHYPER, R2BPROB, R2BWITH, R2MOTIVE, R2PRSIST, R2BPROB, R2TPLBS, \n                                     R3ATTUDE, R3BAGGR, R3BHYPER, R3BPROB, R3BWITH, R3MOTIVE, R3PRSIST, R3BPROB, R3TPLBS,\n                                     KR4ATUDE, KR4BAGGR, KR4BHYPE, KR4BPROB, KR4BWITH, KR4MOTIV, KR4PRSST, KR4TPLBS\n                          ))\n# Testing for normality\nshapiro.a <- lapply(all.assessments, shapiro.test)  # run shapiro on whole dataframe\nstr(shapiro.a[[1]])  # what's in shapiro.2?\nshapiro.b <- sapply(shapiro.a, '[', c(\"statistic\", \"p.value\")) # \nshapiro.b  # looks messy, so transpose for visibility\nt.shapiro.b <- t(shapiro.b)  # flipped\n# Examining 3d Scatter Plots\n# take a random sample of size 50 from a dataset mydata \n# sample without replacement\nmysample1 <- FACES2006.subset[sample(1:nrow(FACES2006.subset), 500,\n                                     replace=FALSE),]\n# 3d scatter plots\nlibrary(scatterplot3d)\nwith(mysample1, {\n  scatterplot3d(A1PPVT4W, R1TPLBS, R1BPROB,        # x y and z axis\n                highlight.3d=TRUE, pch=19, # filled blue circles\n                type=\"h\",             # lines to the horizontal plane\n                main=\"3-D Scatterplot PPVT by PLBS & Problem Behavior for Time 1\",\n                xlab=\"PPVT W Score\",\n                ylab=\"Total PLBS\",\n                zlab=\"Total Problem BeH\",\n                cex.axis=1)\n})\n# Time 2\nwith(mysample1, {\n  scatterplot3d(A2PPVT4W, R2TPLBS, R2BPROB,        # x y and z axis\n                highlight.3d=TRUE, pch=19, # filled blue circles\n                type=\"h\",             # lines to the horizontal plane\n                main=\"3-D Scatterplot PPVT by PLBS & Problem Behavior for Time 2\",\n                xlab=\"PPVT W Score\",\n                ylab=\"Total PLBS\",\n                zlab=\"Total Problem BeH\",\n                cex.axis=1)\n})\n# Time 3\nwith(mysample1, {\n  scatterplot3d(A3PPVT4W, R3TPLBS, R3BPROB,        # x y and z axis\n                highlight.3d=TRUE, pch=19, # filled blue circles\n                type=\"h\",             # lines to the horizontal plane\n                main=\"3-D Scatterplot PPVT by PLBS & Problem Behavior for Time 3\",\n                xlab=\"PPVT W Score\",\n                ylab=\"Total PLBS\",\n                zlab=\"Total Problem BeH\",\n                cex.axis=1)\n})\n# Time 4\nwith(mysample1, {\n  scatterplot3d(A4PPVT4W, KR4TPLBS, KR4BPROB,        # x y and z axis\n                highlight.3d=TRUE, pch=19, # filled blue circles\n                type=\"h\",             # lines to the horizontal plane\n                main=\"3-D Scatterplot PPVT by PLBS & Problem Behavior for Time 4\",\n                xlab=\"PPVT W Score\",\n                ylab=\"Total PLBS\",\n                zlab=\"Total Problem BeH\",\n                cex.axis=1)\n})\n\nlibrary(rgl)\nplot3d(FACES2006.subset$A3PPVT4W, FACES2006.subset$R3TPLBS, FACES2006.subset$R3BPROB, col=\"red\", size=3)\nlibrary(Rcmdr)\nscatter3d(FACES2006.subset$A3PPVT4W, FACES2006.subset$R3TPLBS, FACES2006.subset$R3BPROB)\n#-------------------------------\n# outlier\n# http://www.r-bloggers.com/using-apply-sapply-lapply-in-r/\n# http://stackoverflow.com/questions/12866189/calculating-the-outliers-in-r\n# created a function to identify outlier\nall.assessments <- subset(FACES2006.subset,\n                          select = c(A1PPVT4W, A2PPVT4W, A3PPVT4W, A4PPVT4W, A1WJAPW, A2WJAPW, A3WJAPW, A4WJAPW, A1WJLWW, A2WJLWW, A3WJLWW, A4WJLWW,\n                                     R1ATTUDE, R1BAGGR, R1BHYPER, R1BPROB, R1BWITH, R1MOTIVE, R1PRSIST, R1SSRS, R1TPELS, R1TPLBS,\n                                     R2ATTUDE, R2BAGGR, R2BHYPER, R2BPROB, R2BWITH, R2MOTIVE, R2PRSIST, R2SSRS, R2TPELS, R2TPLBS, \n                                     R3ATTUDE, R3BAGGR, R3BHYPER, R3BPROB, R3BWITH, R3MOTIVE, R3PRSIST, R3SSRS, R3TPELS, R3TPLBS\n                          ))\ntukey.outlier <- function(x) {\n  lowerq = quantile(x, na.rm=TRUE)[2]\n  upperq = quantile(x, na.rm=TRUE)[4]\n  iqr = upperq - lowerq\n  mild.threshold.upper = (iqr * 1.5) + upperq\n  mild.threshold.lower = lowerq - (iqr * 1.5)\n  extreme.threshold.upper = (iqr * 3) + upperq\n  extreme.threshold.lower = lowerq - (iqr * 3)\n  return(c(extreme.threshold.upper, extreme.threshold.lower))\n}\napply(all.assessments, 2, tukey.outlier)\napply(all.assessments, 2, min, na.rm = TRUE)\napply(all.assessments, 2, max, na.rm = TRUE)\n\n\nremove_outliers <- function(x, na.rm = TRUE) {\n  qnt <- quantile(x, probs=c(.25, .75))\n  H <- 1.5 * IQR(x)\n  y <- x\n  y[x < (qnt[1] - H)] <- NA\n  y[x > (qnt[2] + H)] <- NA\n  y\n}\ny1 <- remove_outliers(assessments)\n\n",
    "created" : 1398696969138.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "261580717",
    "id" : "A2BCD87",
    "lastKnownWriteTime" : 1398696979,
    "path" : "~/Git Repositories/Longitudinal_SEM_Panel_FACES2006/descriptives.r",
    "project_path" : "descriptives.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}